AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-app

  Sample SAM Template for todo-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  ResolveTodoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: functions/resolveTodo
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          DATA_TABLE: !Ref TodoDB
      Policies: 
        - DynamoDBWritePolicy:
              TableName: !Ref TodoDB
        - DynamoDBReadPolicy:
              TableName: !Ref TodoDB

  TodoDB:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: id
          AttributeType: S
      KeySchema: 
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1  
  
  TodoApi:
    Type: "AWS::AppSync::GraphQLApi"
    Description: "The GraphQL API "
    Properties:
      AuthenticationType: "AWS_IAM"
      Name: "Todo-API"

  TodoApiSchema:
    Type: "AWS::AppSync::GraphQLSchema"
    Properties:
      ApiId: !GetAtt TodoApi.ApiId
      DefinitionS3Location: schema.graphql
  
  ToDoResovlerStoreSource:
    Type: "AWS::AppSync::DataSource"
    Properties:
      Name: TodoResolverDataSource
      ApiId: !GetAtt TodoApi.ApiId
      Description: ""
      ServiceRoleArn: !GetAtt ToDoResovlerRole.Arn
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt ResolveTodoFunction.Arn

  CreateTodoResolver:
    Type: "AWS::AppSync::Resolver"
    DependsOn: TodoApiSchema
    Properties:
      ApiId: !GetAtt TodoApi.ApiId
      TypeName: Mutation
      FieldName: createTodo
      DataSourceName: !GetAtt ToDoResovlerStoreSource.Name
      RequestMappingTemplateS3Location: graphql/createTodo.request
      ResponseMappingTemplateS3Location: graphql/createTodo.response
  
  AppSyncServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appsync.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  ToDoResovlerRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - Ref: AppSyncDynamoDBPolicy
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - appsync.amazonaws.com
    DependsOn:
      - AppSyncDynamoDBPolicy
  
  AppSyncDynamoDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: /appsync/
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - lambda:invokeFunction
            Resource: [ 
              !Join [ "", [ !GetAtt ResolveTodoFunction.Arn, "*" ] ],
            ]

